{"version":3,"sources":["app.js","mapa.js","horas.js","ponentes.js","slider.js","tag.js"],"names":["document","querySelector","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","addEventListener","terminoBusqueda","forEach","dia","busqueda","categoria_id","value","Object","values","includes","async","buscarEventos","id","horaSeleccionada","classList","remove","add","onclick","seleccionarHora","iniciarApp","e","target","name","horaPrevia","url","resultado","fetch","eventos","listadoHoras","li","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","hora","obtenerHorasDisponibles","json","lat","lng","zoom","L","setView","tileLayer","attribution","addTo","marker","bindPopup","openPopup","ponentesInput","ponentes","ponentesFiltrados","listadoPonentes","ponenteHidden","seleccionarPonente","ponente","ponentePrevio","ponenteId","respuesta","arrayPonentes","nombre","trim","apellido","formatearPonentes","obtenerPonentes","length","expresion","RegExp","toLowerCase","search","firstChild","removeChild","ponenteHTML","createElement","textContent","appendChild","noResultados","mostrarPonentes","obtenerPonente","ponenteDOM","Swiper","Navigation","opciones","slidesPerView","spaceBetween","freeMode","navigation","nextEl","prevEl","breakpoints","768","1024","1200","use","tagsinput","tagsDiv","tagsInputHidden","tags","mostrarTags","tag","etiqueta","ondblclick","eliminarTag","actualizarInputHidden","toString","split","keyCode","preventDefault","console","log"],"mappings":"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","file":"bundle.js","sourcesContent":["import './horas.js';\r\nimport './ponentes.js';\r\nimport './tag.js';\r\nimport './slider.js';\r\nimport './mapa.js';","if(document.querySelector('#mapa')){\r\n    const lat=19.825400\r\n    const lng =-97.361289\r\n    const zoom = 16\r\n\r\n    const map = L.map('mapa').setView([lat, -lng], zoom);\r\n\r\nL.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n    attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n}).addTo(map);\r\n\r\nL.marker([lat, lng]).addTo(map)\r\n    .bindPopup(`\r\n    <h2 clas=\"mapa__heading\">Taller Tecnologico</h2>\r\n    <p class=\"mapa__texto\">Centro de convenciones de teziutlan</p>\r\n    `)\r\n    .openPopup();\r\n}","(function(){\r\n\r\nconst horas = document.querySelector('#horas');\r\n\r\nif(horas){\r\n   \r\n\r\n    const categoria = document.querySelector('[name=\"categoria_id\"]');\r\n    const dias = document.querySelectorAll('[name=\"dia\"]');\r\n    const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\r\n    const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\r\n    \r\n     categoria.addEventListener('change', terminoBusqueda)\r\n     dias.forEach(dia => dia.addEventListener('change', terminoBusqueda));\r\n     \r\n     let busqueda = {\r\n      categoria_id: +categoria.value || '',\r\n      dia: +inputHiddenDia.value || ''\r\n  }\r\n\r\n  if(!Object.values(busqueda).includes('')){\r\n\r\n   async function iniciarApp(){\r\n      await buscarEventos(); \r\n      const id = inputHiddenHora.value;\r\n      //resaltar la hora actual\r\n      const horaSeleccionada = document.querySelector(`[data-hora-id=\"${id}\"]`)\r\n    \r\n      horaSeleccionada.classList.remove('horas__hora--deshabilitada');\r\n      horaSeleccionada.classList.add('horas__hora--seleccionada');\r\n       \r\n      horaSeleccionada.onclick =  seleccionarHora;\r\n    \r\n\r\n    }\r\n    \r\n   iniciarApp();\r\n    \r\n   \r\n  }\r\n\r\n     function terminoBusqueda(e){\r\n      busqueda[e.target.name] = e.target.value;\r\n\r\n      //reiniciar los campos ocultos y el selectro de horas\r\n      inputHiddenHora.value = '';\r\n      inputHiddenDia.value = '';\r\n      const horaPrevia = document.querySelector('.horas__hora--seleccionada')\r\n      if(horaPrevia){\r\n        horaPrevia.classList.remove('horas__hora--seleccionada');\r\n      }  \r\n\r\n      if(Object.values(busqueda).includes('')){\r\n        return;\r\n      }\r\n\r\n   \r\n\r\n      buscarEventos();\r\n     }\r\n\r\n     async function buscarEventos(){\r\n       const {dia, categoria_id} = busqueda\r\n       const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n\r\n       const resultado = await fetch(url);\r\n       const eventos = await resultado.json();\r\n       \r\n       \r\n\r\n       obtenerHorasDisponibles(eventos);\r\n\r\n       \r\n        \r\n     }\r\n\r\n     function obtenerHorasDisponibles(eventos){\r\n      //reiniciar las horas\r\n      const listadoHoras = document.querySelectorAll('#horas li');\r\n       listadoHoras.forEach( li => li.classList.add('horas__hora--deshabilitada') )\r\n      //comprobar eventos ya tomados y quitar la varibale de deshabilitados\r\n         const horasTomadas = eventos.map(evento => evento.hora_id);\r\n        \r\n         const listadoHorasArray =Array.from(listadoHoras);\r\n         \r\n         const resultado = listadoHorasArray.filter(li => !horasTomadas.includes(li.dataset.horaId));\r\n         resultado.forEach(li => li.classList.remove('horas__hora--deshabilitada'));\r\n        \r\n       const horasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada)');\r\n        horasDisponibles.forEach(hora => hora.addEventListener('click', seleccionarHora));       \r\n \r\n     }\r\n\r\n     function seleccionarHora(e){\r\n          //desabiltar hora previa si hay un nuevo click\r\n          const horaPrevia = document.querySelector('.horas__hora--seleccionada')\r\n          if(horaPrevia){\r\n            horaPrevia.classList.remove('horas__hora--seleccionada');\r\n          }         \r\n\r\n        //agregar clase de seleccionado\r\n        e.target.classList.add('horas__hora--seleccionada');\r\n        inputHiddenHora.value = e.target.dataset.horaId;          \r\n        \r\n\r\n        //llenar el campo oculto de dia\r\n        inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value\r\n       \r\n\r\n     }\r\n\r\n    }\r\n\r\n})();","(function(){\r\n    const ponentesInput = document.querySelector('#ponentes');\r\n\r\n     if(ponentesInput){\r\n        let ponentes = [];\r\n        let ponentesFiltrados = [];\r\n\r\n        const listadoPonentes = document.querySelector('#listado-ponentes');\r\n        const ponenteHidden = document.querySelector('[name=\"ponente_id\"]');\r\n        obtenerPonentes();\r\n\r\n        ponentesInput.addEventListener('input', buscarPonentes)\r\n         \r\n        if(ponenteHidden.value){\r\n            (async()=>{\r\n              \r\n                const ponente = await obtenerPonente(ponenteHidden.value)\r\n                const {nombre, apellido} = ponente;\r\n\r\n                 //inserta en el HTML\r\n                 const ponenteDOM = document.createElement('LI');\r\n                 ponenteDOM.classList.add('listado-ponentes__ponente', 'listado-ponentes__ponente--seleccionado');\r\n                 ponenteDOM.textContent = `${nombre} ${apellido}`;\r\n                 listadoPonentes.appendChild(ponenteDOM);\r\n            })()\r\n        }\r\n\r\n\r\n        async function obtenerPonentes(){\r\n        const url = `/api/ponentes`;\r\n\r\n        const respuesta = await fetch(url);\r\n        const resultado = await respuesta.json();\r\n\r\n       formatearPonentes(resultado);\r\n }\r\n async function obtenerPonente(id){\r\n    const url = `/api/ponente?id=${id}`;\r\n    const respuesta = await fetch(url);\r\n    const resultado = await respuesta.json()\r\n    return resultado;\r\n   }\r\n\r\n\r\n       function formatearPonentes(arrayPonentes = []){\r\n         ponentes = arrayPonentes.map(ponente => {\r\n            return{\r\n                nombre: `${ponente.nombre.trim()} ${ponente.apellido.trim()}`,\r\n                id: ponente.id\r\n            }\r\n         })\r\n   \r\n       }\r\n     \r\n\r\n       function buscarPonentes(e){\r\n              const busqueda = e.target.value;\r\n\r\n              if(busqueda.length > 3){\r\n                 const expresion = new RegExp(busqueda, \"i\" );\r\n                 ponentesFiltrados = ponentes.filter(ponente =>{\r\n                         \r\n                     if(ponente.nombre.toLowerCase().search(expresion) != -1 ){\r\n                        return ponente;\r\n                     }\r\n\r\n                 })\r\n                 \r\n              }else{\r\n                ponentesFiltrados = [];\r\n              }\r\n              mostrarPonentes();\r\n       }\r\n       function mostrarPonentes(){\r\n         \r\n        while(listadoPonentes.firstChild){\r\n            listadoPonentes.removeChild(listadoPonentes.firstChild)\r\n        }\r\n\r\n        if(ponentesFiltrados.length > 0){\r\n            ponentesFiltrados.forEach(ponente =>{\r\n                const ponenteHTML = document.createElement('LI');\r\n                ponenteHTML.classList.add('listado-ponentes__ponente')\r\n                ponenteHTML.textContent = ponente.nombre;\r\n                ponenteHTML.dataset.ponenteId = ponente.id;\r\n                ponenteHTML.onclick = seleccionarPonente;\r\n    \r\n                //añadir al dom\r\n                listadoPonentes.appendChild(ponenteHTML);\r\n            })\r\n    \r\n\r\n        }else{\r\n            const noResultados = document.createElement('P');\r\n            noResultados.classList.add('listado-ponentes__no-resultado');\r\n            noResultados.textContent = 'No hay resultados para la busqueda';\r\n            listadoPonentes.appendChild(noResultados);\r\n        }\r\n\r\n   \r\n       }\r\n       function seleccionarPonente(e){\r\n        const ponente = e.target;\r\n        //remover la clase previa\r\n\r\n        const ponentePrevio = document.querySelector('.listado-ponentes__ponente--seleccionado')\r\n        if(ponentePrevio){\r\n            ponentePrevio.classList.remove('listado-ponentes__ponente--seleccionado');\r\n        }\r\n\r\n        ponente.classList.add('listado-ponentes__ponente--seleccionado');\r\n        ponenteHidden.value = ponente.dataset.ponenteId;   \r\n    }\r\n\r\n     }\r\n\r\n})();","import Swiper from \"swiper\";\r\nimport { Navigation } from 'swiper/modules'\r\nimport 'swiper/css';\r\nimport 'swiper/css/navigation';\r\ndocument.addEventListener('DOMContentLoaded', function(){\r\n    if(document.querySelector('.slider')){\r\n      const opciones ={\r\n        slidesPerView: 1,\r\n        spaceBetween: 15,\r\n        freeMode: true,\r\n        navigation:{\r\n            nextEl:'.swiper-button-next',\r\n            prevEl:'.swiper-button-prev'\r\n        },\r\n        breakpoints:{\r\n            768: {\r\n                slidesPerView: 2\r\n            \r\n            },\r\n            1024: {\r\n                slidesPerView: 3\r\n            \r\n            },\r\n            1200:{\r\n                   slidesPerView: 4\r\n            }\r\n\r\n        }\r\n\r\n\r\n      }\r\n      Swiper.use([Navigation])\r\n      new Swiper('.slider', opciones)\r\n    }\r\n}) ;\r\n","(function(){\r\nconst tagsinput = document.querySelector('#tags_input');\r\n    \r\nif(tagsinput){\r\n\r\n const tagsDiv = document.querySelector('#tags');   \r\n const tagsInputHidden = document.querySelector('input[name=\"tags\"]');   \r\n let tags = [];\r\n\r\n    //Recuperar del input oculto\r\n    if(tagsInputHidden.value !== ''){\r\n      tags = tagsInputHidden.value.split(',');\r\n      mostrarTags();\r\n    }\r\n    //escuchar los cambios en el input\r\n    tagsinput.addEventListener('keypress', guardarTag)\r\n\r\n    function guardarTag(e){\r\n     if(e.keyCode === 44){\r\n\r\n        if(e.target.value.trim() === '' || e.target.value < 1 ){\r\n            return;\r\n        }\r\n           \r\n        e.preventDefault();\r\n\r\n        tags = [...tags, e.target.value.trim()];\r\n\r\n        tagsinput.value ='';\r\n        console.log(tags);\r\n\r\n        mostrarTags();\r\n        \r\n        \r\n     }\r\n    }\r\n\r\n    function mostrarTags(){\r\n          tagsDiv.textContent = '';\r\n          tags.forEach(tag =>{\r\n            const etiqueta = document.createElement('LI');\r\n            etiqueta.classList.add('formulario__tag')\r\n            etiqueta.textContent = tag;\r\n            etiqueta.ondblclick = eliminarTag;\r\n            tagsDiv.appendChild(etiqueta);\r\n          });\r\n\r\n          actualizarInputHidden();\r\n    }\r\n\r\n    function eliminarTag(e){\r\n        e.target.remove()\r\n        tags = tags.filter(tag => tag !== e.target.textContent)\r\n        actualizarInputHidden();\r\n    }\r\n\r\n    function actualizarInputHidden(){\r\n  tagsInputHidden.value = tags.toString();\r\n    }\r\n\r\n}\r\n\r\n})();\r\n"]}